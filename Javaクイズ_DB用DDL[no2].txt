INSERT INTO QUIZ VALUES (8,21,'以下の中から、privateメソッドにアクセスできるものを選びなさい。(3つ選択)',5,3);
INSERT INTO QUIZ VALUES (8,22,'次の配列の要素をすべて出力するコードとして正しいものを選びなさい。(1つ選択)<br>
<br>
　int[] array = {1, 2, 3, 4, 5};<br>',4,1);
INSERT INTO QUIZ VALUES (8,23,'以下の中から、ポリモーフィズムに関係が深いものを選びなさい。(2つ選択)',5,2);
INSERT INTO QUIZ VALUES (8,24,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Main {<br>
2.　　　public static void main(char[] args) {<br>
3.　　　　　System.out.println(args[0]);<br>
4.　　　}<br>
5.<br>
6.　　　public static void main(String[] args) {<br>
7.　　　　　System.out.println(args[1]);<br>
8.　　　}<br>
9.　}<br>
<br>
【実行方法】<br>
　java Main Test Run<br>',4,1);
INSERT INTO QUIZ VALUES (8,25,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Main {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　boolean flag = false;<br>
4.<br>
5.　　　　　if(flag == true) {<br>
6.　　　　　　　for(int i = 0; flag; i++) {<br>
7.　　　　　　　　　System.out.print("a");<br>
8.　　　　　　　　　flag = false;<br>
9.　　　　　　　}<br>
10.　　　　　} else {<br>
11.　　　　　　　System.out.print("b");<br>
12.　　　　　}<br>
13.　　　}<br>
14.　}<br>',6,1);
INSERT INTO QUIZ VALUES (8,26,'適切にカプセル化し、維持するために必要な修飾子として、正しいものを選びなさい。(1つ選択)',4,1);
INSERT INTO QUIZ VALUES (8,27,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Airline {<br>
2.　　　String flightNumber;<br>
3.<br>
4.　　　public void printFlightNumber() {<br>
5.　　　　　System.out.println(flightNumber);<br>
6.　　　}<br>
7.<br>
8.　　　public static void main(String[] args) {<br>
9.　　　　　Airline a1 = new Airline();<br>
10.　　　　　Airline a2 = a1;<br>
11.　　　　　a1.flightNumber = "DAL027";<br>
12.　　　　　a2.flightNumber = "DAL305";<br>
13.<br>
14.　　　　　a1.printFlightNumber();<br>
15.　　　　　a2.printFlightNumber();<br>
16.　　　}<br>
17.　}<br>',5,1);
INSERT INTO QUIZ VALUES (8,28,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class ArrayTest {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　char[] chars1 = new char[6];<br>
4.　　　　　char1[0] = "b";<br>
5.　　　　　char1[1] = "o";<br>
6.　　　　　char1[2] = "o";<br>
7.　　　　　char1[3] = "k";<br>
8.<br>
9.　　　　　char[] char2 = { "l", "i", "b", "r", "a", "r", "y" };<br>
10.　　　　　chars1 = chars2;<br>
11.<br>
12.　　　　　System.out.println(chars1);<br>
13.　　}<br>
14.　}<br>',6,1);
UPDATE QUIZ SET QUIZ = REPLACE(QUIZ, '"','''') WHERE QUIZ_CHAPTER_ID = 8 AND QUIZ_ID = 28;
INSERT INTO QUIZ VALUES (8,29,'以下の中から、情報隠蔽に関わりの深いキーワードを選びなさい。(3つ選択)',6,3);
INSERT INTO QUIZ VALUES (8,30,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Item {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　Item[] items = {new Item(), new Item(), new Item()};<br>
4.　　　　　int u = items.length;<br>
5.　　　　　do while(u > 0) {<br>
6.　　　　　　　System.out.println(u-- + " ");<br>
7.　　　　　}<br>
8.　　　}<br>
9.　}<br>',5,1);
INSERT INTO QUIZ VALUES (8,31,'クラスの定義として正しいものを選びなさい。(3つ選択)',6,1);
INSERT INTO QUIZ VALUES (8,32,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Main {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　int i = 0;<br>
4.　　　　　do {<br>
5.　　　　　　　++i;<br>
6.　　　　　　　System.out.println("hoge");<br>
7.　　　　　　} while (i < 3);<br>
8.　　　}<br>
9.　}<br>',5,1);
INSERT INTO QUIZ VALUES (8,33,'Javaに関する説明として、正しいものを選びなさい。(3つ選択)',6,3);
INSERT INTO QUIZ VALUES (8,34,'以下の中から、メソッドをオーバーロードしているクラスを選びなさい。(1つ選択)',4,1);
INSERT INTO QUIZ VALUES (8,35,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class News {<br>
2.　　　static int id;<br>
3.　　　String name;<br>
4.<br>
5.　　　static void printInfo() {<br>
6.　　　　　System.out.println(id + ":" + name);<br>
7.　　　}<br>
8.<br>
9.　　　public static void main(String[] args) {<br>
10.　　　　　News n = new News();<br>
11.　　　　　n.printInfo();<br>
12.　　　}<br>
13.　}<br>',5,1);
INSERT INTO QUIZ VALUES (8,36,'継承に関する説明として、正しいものを選びなさい。(2つ選択)',4,2);
INSERT INTO QUIZ VALUES (8,37,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Main {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　char c = "b";<br>
4.<br>
5.　　　　　switch (c) {<br>
6.　　　　　　　case "a":<br>
7.　　　　　　　　　System.out.print(!A!);<br>
8.　　　　　　　　　break;<br>
9.　　　　　　　case "b":<br>
10.　　　　　　　　　System.out.print(!B!);<br>
11.　　　　　　　case "c":<br>
12.　　　　　　　　　System.out.print(!C!);<br>
13.　　　　　　　　　break;<br>
14.　　　　　　　default:<br>
15.　　　　　　　　　System.out.print(!D!);<br>
16.　　　　　　　　　break;<br>
17.　　　　　}<br>
18.　　　}<br>
19.　}<br>',5,1);
UPDATE QUIZ SET QUIZ = REPLACE(QUIZ, '"','''') WHERE QUIZ_CHAPTER_ID = 8 AND QUIZ_ID = 37;
UPDATE QUIZ SET QUIZ = REPLACE(QUIZ, '!','"') WHERE QUIZ_CHAPTER_ID = 8 AND QUIZ_ID = 37;
INSERT INTO QUIZ VALUES (8,38,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Employee {<br>
2.　　　public void disp() {<br>
3.　　　　　System.out.println("Employee");<br>
4.　　　}<br>
5.　}<br>
_________________________________________<br>
1.　public class Manager extends Employee {<br>
2.　　　public void disp() {<br>
3.　　　　　System.out.println("Manager");<br>
4.　　　}<br>
5.　　　public static void main(String[] args) {<br>
6.　　　　　Manager m = new Manager();<br>
7.　　　　　Employee e = m;<br>
8.　　　　　e.disp();<br>
9.　　　}<br>
10.　}<br>',6,1);
INSERT INTO QUIZ VALUES (8,39,'スーパークラスの要素と同じ名前で定義できるサブクラスの要素として、正しいものを選びなさい。(1つ選択)',4,1);
INSERT INTO QUIZ VALUES (8,40,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Counter {<br>
2.　　　static int count = 0;<br>
3.<br>
4.　　　Counter() {<br>
5.　　　　　++count;<br>
6.　　　}<br>
7.<br>
8.　　　public static void main(String[] args) {<br>
9.　　　　　Counter c = new Counter();<br>
10.　　　　　c = new Counter();<br>
11.　　　　　System.out.println(c.count);<br>
12.　　　}<br>
13.　}<br>',5,1);
INSERT INTO QUIZ VALUES (8,41,'次のようなItemクラスとBookクラスが定義されている場合、Itemクラスのインスタンスが生成されるコードとして正しいものを選びなさい。(2つ選択)<br>
<br>
1.　class Item {     }<br>
2.　class Book extends Item {     }<br>',5,2);
INSERT INTO QUIZ VALUES (8,42,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class SuperClass {<br>
2.　　　private int num = 10;<br>
3.　　　void test() {<br>
4.　　　　　System.out.println(num);<br>
5.　　　}<br>
6.　}<br>
_________________________________________<br>
1.　public class SubClass extends SuperClass {<br>
2.　　　private int num = 20;<br>
3.　　　public static void main(String[] args) {<br>
4.　　　　　SubClass sub = new SubClass();<br>
5.　　　　　sub.test();<br>
6.　　　}<br>
7.　}<br>',4,1);
INSERT INTO QUIZ VALUES (8,43,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Main {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　int x = 3;<br>
4.　　　　　int y = 5;<br>
5.<br>
6.　　　　　if(x != 3)<br>
7.　　　　　　　System.out.println("A");<br>
8.　　　　　else if(y > x)<br>
9.　　　　　　　System.out.println("B");<br>
10.　　　　　else<br>
11.　　　　　　　System.out.println("C");<br>
12.　　　}<br>
13.　}<br>',5,1);
INSERT INTO QUIZ VALUES (8,44,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Main {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　int x = 12 / 2;<br>
4.　　　　　int y = 2 * 3;<br>
5.<br>
6.　　　　　if(x > y)<br>
7.　　　　　　　System.out.println("A");<br>
8.　　　　　else if(x < y)<br>
9.　　　　　　　System.out.println("B");<br>
10.　　　　　else if(X = y)<br>
11.　　　　　　　System.out.println("C");<br>
12.　　　　　else<br>
13.　　　　　　　System.out.println("D");<br>
14.　　　}<br>
15.　}<br>',6,1);
INSERT INTO QUIZ VALUES (8,45,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Main {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　byte a = -120;<br>
4.　　　　　short b = 90000;<br>
5.　　　　　int c = -20000000;<br>
6.　　　　　long d = 920000000L;<br>
7.　　　}<br>
8.　}<br>',6,1);
INSERT INTO QUIZ VALUES (8,46,'次のプログラムを実行し、配列の要素がすべて出力されるようにしたい。4行目に挿入するコードとして、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Main {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　String[] array = {"hoge", "fuga", "piyo"};<br>
4.　　　　　// insert code here<br>
5.　　　　　　　System.out.println(str);<br>
6.　　　}<br>
7.　}<br>',5,1);
INSERT INTO QUIZ VALUES (8,47,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Calculator {<br>
2.　　　int beforeTaxes(int price) {<br>
3.　　　　　return (int) (price * 1.08);<br>
4.　　　}<br>
5.　　　double beforeTaxes(int price) {<br>
6.　　　　　return price * 1.08;<br>
7.　　　}<br>
8.<br>
9.　　　public static void main(String[] args) {<br>
10.　　　　　int p = 40;<br>
11.　　　　　Calculator calc = new Calculator();<br>
12.　　　　　System.out.println("payment = " + calc.beforeTaxes(p));<br>
13.　　　}<br>
14.　}<br>',4,1);
INSERT INTO QUIZ VALUES (8,48,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class SuperClass {<br>
2.　　　public void test() {<br>
3.　　　　　System.out.println("super");<br>
4.　　　}<br>
5.　}<br>
_________________________________________<br>
1.　public class SubClass extends SuperClass {<br>
2.　　　public void test() {<br>
3.　　　　　System.out.println("sub");<br>
4.　　　}<br>
5.　}<br>
_________________________________________<br>
1.　public class Sample {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　SuperClass s = new SubClass();<br>
4.　　　　　s.test();<br>
5.　　　}<br>
6.　}<br>',4,1);
INSERT INTO QUIZ VALUES (8,49,'抽象クラスに関する説明として、正しいものを選びなさい。(1つ選択)',5,1);
INSERT INTO QUIZ VALUES (8,50,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class SuperClass {<br>
2.　　　public void print() {<br>
3.　　　　　System.out.println("super");<br>
4.　　　}<br>
5.　}<br>
_________________________________________<br>
1.　public class SubClass extends SuperClass {<br>
2.　　　public void print() {<br>
3.　　　　　System.out.println("sub");<br>
4.　　　}<br>
5.　　　public static void main(String[] args) {<br>
6.　　　　　SuperClass s = new SuperClass();<br>
7.　　　　　SubClass s2 = (SubClass) s;<br>
8.　　　　　s2.print();<br>
9.　　　}<br>
10.　}<br>',4,1);
INSERT INTO QUIZ VALUES (8,51,'次のプログラムを実行し、「sub,super」と表示されるようにしたい。空欄にあてはまるコードを選びなさい。(1つ選択)<br>
<br>
1.　public class SuperClass {<br>
2.　　　String val = "super";<br>
3.　}<br>
_________________________________________<br>
1.　public class SubClass extends SuperClass {<br>
2.　　　String val = "sub";<br>
3.　　　public void test() {<br>
4.　　　　　System.out.println(val + "," + □);<br>
5.　　　}<br>
6.　　　public static void main(String[] args) {<br>
7.　　　　　SubClass sub = new SubClass();<br>
8.　　　　　sub.test();<br>
9.　　　}<br>
10.　}<br>',6,1);
INSERT INTO QUIZ VALUES (8,52,'配列の宣言と配列インスタンスの生成として有効なものを選びなさい。(3つ選択)',7,3);
INSERT INTO QUIZ VALUES (8,53,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Main {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　int i = 1;<br>
4.　　　　　while(i++ < 5) {<br>
5.　　　　　　　System.out.println("hoge");<br>
6.　　　　　}<br>
7.　　　　　i--;<br>
8.　　　}<br>
9.　}<br>',5,1);
INSERT INTO QUIZ VALUES (8,54,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Main {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　int x = 5;<br>
4.　　　　　int y = (x = 2) + x;<br>
5.　　　　　System.out.println(y + ":" + x);<br>
6.　　　}<br>
7.　}<br>',6,1);
INSERT INTO QUIZ VALUES (8,55,'次のプログラムのコンパイルを成功させ、実行結果が「2」となるようにしたい。空欄にあてはまるコードを選びなさい。(1つ選択)<br>
<br>
1.　public class Main {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　int a = subtract(5, 3);<br>
4.　　　　　System.out.println(a);<br>
5.　　　}<br>
6.　　　　　□ int subtract(int a, int b) {<br>
7.　　　　　return a - b;<br>
8.　　　}<br>
9.　}<br>',4,1);
INSERT INTO QUIZ VALUES (8,56,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Point {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　int x = 5;<br>
4.　　　　　Point p = new Point();<br>
5.　　　　　p.move(x);<br>
6.　　　}<br>
7.　　　public void move(int y) {<br>
8.　　　　　System.out.println(x++ + " " + --y);<br>
9.　　　}<br>
10.　}<br>',5,1);
INSERT INTO QUIZ VALUES (8,57,'インタフェースの定義として、正しいものを選びなさい。(1つ選択)',4,1);
INSERT INTO QUIZ VALUES (8,58,'コンストラクタに関する説明として、正しいものを選びなさい。(2つ選択)',4,2);
INSERT INTO QUIZ VALUES (8,59,'次のプログラムが正常にコンパイルされるようにしたい。SampleImplクラスの2行目に挿入するコードとして、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　abstract class Sample {<br>
2.　　　void print() {<br>
3.　　　　　System.out.println("sample");<br>
4.　　　}<br>
5.　　　public abstract void test();<br>
6.　}<br>
_________________________________________<br>
1.　public class SampleImpl extends Sample {<br>
2.　　　//insert code here<br>
3.　}<br>',5,1);
INSERT INTO QUIZ VALUES (8,60,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Main {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　String s1 = "abc";<br>
4.　　　　　String s2 = "abc";<br>
5.　　　　　String s3 = new String("abc");<br>
6.<br>
7.　　　　　if(s1 == s2) {<br>
8.　　　　　　　System.out.print("s1 == s2 ");<br>
9.　　　　　} else {<br>
10.　　　　　　　System.out.print("s1 != s2 ");<br>
11.　　　　　}<br>
12.<br>
13.　　　　　if(s1 == s3) {<br>
14.　　　　　　　System.out.print("s1 == s3");<br>
15.　　　　　} else {<br>
16.　　　　　　　System.out.print("s1 != s3");<br>
17.　　　　　}<br>
18.　　　}<br>
19.　}<br>',4,1);

DROP TABLE ANSWER;

CREATE TABLE ANSWER (
  QUIZ_CHAPTER_ID    	INTEGER,
  QUIZ_ID       	INTEGER,
  ANSWER_ID       	INTEGER, PRIMARY KEY(QUIZ_CHAPTER_ID,QUIZ_ID,ANSWER_ID),
  ANSWER 		VARCHAR(250)   NOT NULL,
  ANSWER_FLG		CHAR(1)   NOT NULL  
);

INSERT INTO ANSWER VALUES (1,1,1,'A. すべての変数は、型の宣言をしなければならない',1);
INSERT INTO ANSWER VALUES (1,1,2,'B. すべての式は、型を持たない',0);
INSERT INTO ANSWER VALUES (1,1,3,'C. 式の型はコンパイル時に解釈される',1);
INSERT INTO ANSWER VALUES (1,1,4,'D. 実行時にエラーを発生させることで、型の整合性を確認する',0);
INSERT INTO ANSWER VALUES (1,2,1,'A. マルチスレッドによる並行処理をサポートする',1);
INSERT INTO ANSWER VALUES (1,2,2,'B. マルチプロセスによる並行処理をサポートする',0);
INSERT INTO ANSWER VALUES (1,2,3,'C. シングルスレッドアプリケーションのみをサポートする',0);
INSERT INTO ANSWER VALUES (1,2,4,'D. 並行処理を完全に制御できる',0);
INSERT INTO ANSWER VALUES (1,2,5,'E. 並行処理を部分的に制御できる',1);
INSERT INTO ANSWER VALUES (1,3,1,'A. 特定のOSに特化したプログラミング言語である',0);
INSERT INTO ANSWER VALUES (1,3,2,'B. ほかのプログラミング言語に比べて高速に実行できる',0);
INSERT INTO ANSWER VALUES (1,3,3,'C. あらかじめ機械語にコンパイルされる',0);
INSERT INTO ANSWER VALUES (1,3,4,'D. メモリ管理が自動化される',1);
INSERT INTO ANSWER VALUES (1,3,5,'E. セキュリティが向上する実行方式を取り入れている',1);
INSERT INTO ANSWER VALUES (1,4,1,'A. コンパイラによって機械語にコンパイルされる',0);
INSERT INTO ANSWER VALUES (1,4,2,'B. コンパイラによって中間コードにコンパイルされる',1);
INSERT INTO ANSWER VALUES (1,4,3,'C. 実行可能ファイルを作成する',0);
INSERT INTO ANSWER VALUES (1,4,4,'D. JVMにクラスファイルを読み込ませる',1);
INSERT INTO ANSWER VALUES (1,5,1,'A. プラットフォームに依存したネイティブコードが記述されている',0);
INSERT INTO ANSWER VALUES (1,5,2,'B. プラットフォームに依存しないネイティブコードが記述されている',0);
INSERT INTO ANSWER VALUES (1,5,3,'C. JVMだけが理解できるコードが記述されている',1);
INSERT INTO ANSWER VALUES (1,5,4,'D. 人間だけが理解できるコードが記述されている',0);
INSERT INTO ANSWER VALUES (1,6,1,'A. 自動的にメモリを開放する',1);
INSERT INTO ANSWER VALUES (1,6,2,'B. メモリを任意のタイミングで解放できる',0);
INSERT INTO ANSWER VALUES (1,6,3,'C. ポインタを使ってメモリを自由に操作できる',0);
INSERT INTO ANSWER VALUES (1,6,4,'D. メモリの効率的な利用を自動化する',1);
INSERT INTO ANSWER VALUES (1,7,1,'A. publicであること',1);
INSERT INTO ANSWER VALUES (1,7,2,'B. staticであること',1);
INSERT INTO ANSWER VALUES (1,7,3,'C. 1つのソースファイルに複数記述できる',0);
INSERT INTO ANSWER VALUES (1,7,4,'D. 戻り値型はintであること',0);
INSERT INTO ANSWER VALUES (1,7,5,'E. 引数はString配列型もしくはString型の可変長引数であること',1);
INSERT INTO ANSWER VALUES (1,7,6,'F. 戻り値として、0もしくは1を戻すこと',0);
INSERT INTO ANSWER VALUES (1,8,1,'A. 1つのソースファイルにpublicなインターフェースを複数記述できる',0);
INSERT INTO ANSWER VALUES (1,8,2,'B. ソースファイルの名前はpublicなクラス名と一致させなくてはいけない',1);
INSERT INTO ANSWER VALUES (1,8,3,'C. 1つのソースファイルには、1つのクラスだけを記述できる',0);
INSERT INTO ANSWER VALUES (1,8,4,'D. 1つのソースファイル内に、デフォルトのアクセス修飾子で修飾したインターフェースとpublicなクラスの両方を記述できる',1);
INSERT INTO ANSWER VALUES (1,8,5,'E. 1つのソースファイルにpublicなクラスを複数記述できる',0);
INSERT INTO ANSWER VALUES (1,9,1,'A. JVMが含まれる',1);
INSERT INTO ANSWER VALUES (1,9,2,'B. GUIアプリケーションの開発に向いている',1);
INSERT INTO ANSWER VALUES (1,9,3,'C. 大規模システム向けの機能をセットにして提供している',0);
INSERT INTO ANSWER VALUES (1,9,4,'D. 使用のみを提供している',0);
INSERT INTO ANSWER VALUES (1,10,1,'A. Java EEでは使用だけを定め、実装は各社が提供している',1);
INSERT INTO ANSWER VALUES (1,10,2,'B. Java SEの範囲は含まない',0);
INSERT INTO ANSWER VALUES (1,10,3,'C. エンタープライズ用途向けの多くの機能をセットにしたものである',1);
INSERT INTO ANSWER VALUES (1,10,4,'D. 携帯電話のような、リソースが制限されたデバイス向けの機能を提供している',0);
INSERT INTO ANSWER VALUES (1,11,1,'A. Java SEの機能の一部を抜き出して定義したエディションである',1);
INSERT INTO ANSWER VALUES (1,11,2,'B. 基本的なライブラリとJVMを組み合わせたものを「プロファイル 」と呼ぶ',0);
INSERT INTO ANSWER VALUES (1,11,3,'C. 特定のデバイスに対応するAPIだけを抽出したものを「コンフィギュレーション」と呼ぶ',0);
INSERT INTO ANSWER VALUES (1,11,4,'D. Java MEでは、JVMではなく「KVM」と呼ばれる仮想マシンを使うことがある',1);
INSERT INTO ANSWER VALUES (2,1,1,'A. integer',0);
INSERT INTO ANSWER VALUES (2,1,2,'B. double',1);
INSERT INTO ANSWER VALUES (2,1,3,'C. Number',0);
INSERT INTO ANSWER VALUES (2,1,4,'D. byte',1);
INSERT INTO ANSWER VALUES (2,1,5,'E. Character',0);
INSERT INTO ANSWER VALUES (2,2,1,'A. String',1);
INSERT INTO ANSWER VALUES (2,2,2,'B. Date',1);
INSERT INTO ANSWER VALUES (2,2,3,'C. int',0);
INSERT INTO ANSWER VALUES (2,2,4,'D. boolean',0);
INSERT INTO ANSWER VALUES (2,2,5,'E. char[]',1);
INSERT INTO ANSWER VALUES (2,3,1,'A. double',0);
INSERT INTO ANSWER VALUES (2,3,2,'B. char',1);
INSERT INTO ANSWER VALUES (2,3,3,'C. short',1);
INSERT INTO ANSWER VALUES (2,3,4,'D. int',1);
INSERT INTO ANSWER VALUES (2,3,5,'E. float',0);
INSERT INTO ANSWER VALUES (2,4,1,'A. char',0);
INSERT INTO ANSWER VALUES (2,4,2,'B. boolean',1);
INSERT INTO ANSWER VALUES (2,4,3,'C. double',0);
INSERT INTO ANSWER VALUES (2,4,4,'D. int',0);
INSERT INTO ANSWER VALUES (2,4,5,'E. String',0);
INSERT INTO ANSWER VALUES (2,5,1,'A. プリミティブ型の変数は配列インスタンスへの参照を保持できる',0);
INSERT INTO ANSWER VALUES (2,5,2,'B. プリミティブ型の変数は文字列を保持できる',0);
INSERT INTO ANSWER VALUES (2,5,3,'C. 参照型の変数はインスタンスへの参照を保持できる',1);
INSERT INTO ANSWER VALUES (2,5,4,'D. 参照型の変数は整数値を保持できる',0);
INSERT INTO ANSWER VALUES (2,5,5,'E. プリミティブ型の変数は数値、文字、真偽値を保持できる',1);
INSERT INTO ANSWER VALUES (2,6,1,'A. int number;',1);
INSERT INTO ANSWER VALUES (2,6,2,'B. length long;',0);
INSERT INTO ANSWER VALUES (2,6,3,'C. String name, code;',1);
INSERT INTO ANSWER VALUES (2,6,4,'D. boolean long;',0);
INSERT INTO ANSWER VALUES (2,6,5,'E. double 3.7;',0);
INSERT INTO ANSWER VALUES (2,7,1,'A. long number = 2.5;',0);
INSERT INTO ANSWER VALUES (2,7,2,'B. float number = 5;',1);
INSERT INTO ANSWER VALUES (2,7,3,'C. byte number = 128;',0);
INSERT INTO ANSWER VALUES (2,7,4,'D. double number = 4.3;',1);
INSERT INTO ANSWER VALUES (2,7,5,'E. int number = 3.0;',0);
INSERT INTO ANSWER VALUES (2,8,1,'A. boolean flag = TRUE;',0);
INSERT INTO ANSWER VALUES (2,8,2,'B. boolean flag = "true";',0);
INSERT INTO ANSWER VALUES (2,8,3,'C. boolean flag = false;',1);
INSERT INTO ANSWER VALUES (2,8,4,'D. boolean flag = 0;',0);
INSERT INTO ANSWER VALUES (2,8,5,'E. boolean flag = "false";',0);
UPDATE ANSWER SET ANSWER = REPLACE(ANSWER, '"','''') WHERE QUIZ_CHAPTER_ID = 2 AND QUIZ_ID = 8 AND ANSWER_ID = 5;
INSERT INTO ANSWER VALUES (2,9,1,'A. char c = "AB";',0);
INSERT INTO ANSWER VALUES (2,9,2,'B. char c = "T";',0);
INSERT INTO ANSWER VALUES (2,9,3,'C. char c = "\u1F1C";',1);
INSERT INTO ANSWER VALUES (2,9,4,'D. char c = "U";',1);
INSERT INTO ANSWER VALUES (2,9,5,'E. char c = 97;',1);
UPDATE ANSWER SET ANSWER = REPLACE(ANSWER, '"','''') WHERE QUIZ_CHAPTER_ID = 2 AND QUIZ_ID = 9 AND ANSWER_ID = 1;
UPDATE ANSWER SET ANSWER = REPLACE(ANSWER, '"','''') WHERE QUIZ_CHAPTER_ID = 2 AND QUIZ_ID = 9 AND ANSWER_ID = 3;
UPDATE ANSWER SET ANSWER = REPLACE(ANSWER, '"','''') WHERE QUIZ_CHAPTER_ID = 2 AND QUIZ_ID = 9 AND ANSWER_ID = 4;
UPDATE ANSWER SET ANSWER = REPLACE(ANSWER, '"','''') WHERE QUIZ_CHAPTER_ID = 2 AND QUIZ_ID = 9 AND ANSWER_ID = 5;
INSERT INTO ANSWER VALUES (2,10,1,'A. String str = "A";',1);
INSERT INTO ANSWER VALUES (2,10,2,'B. String str = "null";',1);
INSERT INTO ANSWER VALUES (2,10,3,'C. String str = "A";',0);
INSERT INTO ANSWER VALUES (2,10,4,'D. String str = "true";',1);
INSERT INTO ANSWER VALUES (2,10,5,'E. String str = true;',0);
UPDATE ANSWER SET ANSWER = REPLACE(ANSWER, '"','''') WHERE QUIZ_CHAPTER_ID = 2 AND QUIZ_ID = 10 AND ANSWER_ID = 3;
INSERT INTO ANSWER VALUES (2,11,1,'A. int final a = 10;',0);
INSERT INTO ANSWER VALUES (2,11,2,'B. int frozen a = 17;',0);
INSERT INTO ANSWER VALUES (2,11,3,'C. frozen int a = 13;',0);
INSERT INTO ANSWER VALUES (2,11,4,'D. final int a = 8;',1);
INSERT INTO ANSWER VALUES (2,11,5,'E. int a final = 3;',0);
INSERT INTO ANSWER VALUES (2,11,6,'F. final int a;',1);
INSERT INTO ANSWER VALUES (2,12,1,'A.  [blue] と表示される',0);
INSERT INTO ANSWER VALUES (2,12,2,'B. [red] と表示される',0);
INSERT INTO ANSWER VALUES (2,12,3,'C. コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (2,12,4,'D. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (2,13,1,'A. [AB] と表示される',0);
INSERT INTO ANSWER VALUES (2,13,2,'B. [A] と表示される',0);
INSERT INTO ANSWER VALUES (2,13,3,'C. [B] と表示される',0);
INSERT INTO ANSWER VALUES (2,13,4,'D. コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (2,13,5,'E. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (2,14,1,'A. private title String;',0);
INSERT INTO ANSWER VALUES (2,14,2,'B. private String title;',1);
INSERT INTO ANSWER VALUES (2,14,3,'C. String title private;',0);
INSERT INTO ANSWER VALUES (2,14,4,'D. String private title;',0);
INSERT INTO ANSWER VALUES (2,15,1,'A. Static int count;',1);
INSERT INTO ANSWER VALUES (2,15,2,'B. int count static;',0);
INSERT INTO ANSWER VALUES (2,15,3,'C. static private int count;',1);
INSERT INTO ANSWER VALUES (2,15,4,'D. static count int;',0);
INSERT INTO ANSWER VALUES (2,16,1,'A. 0 が表示される',0);
INSERT INTO ANSWER VALUES (2,16,2,'B. 9 が表示される',0);
INSERT INTO ANSWER VALUES (2,16,3,'C. 12が表示される',0);
INSERT INTO ANSWER VALUES (2,16,4,'D. コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (2,16,5,'E. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (2,17,1,'A. int[] array = new int[];',0);
INSERT INTO ANSWER VALUES (2,17,2,'B. int() array = new int(3);',0);
INSERT INTO ANSWER VALUES (2,17,3,'C. int array = new int[3];',0);
INSERT INTO ANSWER VALUES (2,17,4,'D. int[3] array = new int[];',0);
INSERT INTO ANSWER VALUES (2,17,5,'E. int[] array = new int[3];',1);
INSERT INTO ANSWER VALUES (2,18,1,'A. int[] array = {3, 8, 10};',1);
INSERT INTO ANSWER VALUES (2,18,2,'B. int[] array = new {3, 8, 10};',0);
INSERT INTO ANSWER VALUES (2,18,3,'C. int[] array = (3, 8, 10);',0);
INSERT INTO ANSWER VALUES (2,18,4,'D. int() array = {3, 8, 10};',0);
INSERT INTO ANSWER VALUES (2,18,5,'E. int array = {3, 8, 10};',0);
INSERT INTO ANSWER VALUES (2,19,1,'A. array.size;',0);
INSERT INTO ANSWER VALUES (2,19,2,'B. array.length();',0);
INSERT INTO ANSWER VALUES (2,19,3,'C. array length;',0);
INSERT INTO ANSWER VALUES (2,19,4,'D. array.length;',1);
INSERT INTO ANSWER VALUES (2,19,5,'E. array.size();',0);
INSERT INTO ANSWER VALUES (2,20,1,'A. 3 が表示される',0);
INSERT INTO ANSWER VALUES (2,20,2,'B. 7 が表示される',1);
INSERT INTO ANSWER VALUES (2,20,3,'C. コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (2,20,4,'D. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (2,21,1,'A. 3 が表示される',0);
INSERT INTO ANSWER VALUES (2,21,2,'B. 4 が表示される',0);
INSERT INTO ANSWER VALUES (2,21,3,'C. コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (2,21,4,'D. 実行時に例外がスローされる',1);
INSERT INTO ANSWER VALUES (2,22,1,'A. 3   が表示される',0);
INSERT INTO ANSWER VALUES (2,22,2,'B. 3.5が表示される',0);
INSERT INTO ANSWER VALUES (2,22,3,'C. コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (2,22,4,'D. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (2,23,1,'A. 0  が表示される',0);
INSERT INTO ANSWER VALUES (2,23,2,'B. 3  が表示される',1);
INSERT INTO ANSWER VALUES (2,23,3,'C.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (2,23,4,'D. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (2,24,1,'A. java Main HelloWorld',0);
INSERT INTO ANSWER VALUES (2,24,2,'B. java Main Hello, World',0);
INSERT INTO ANSWER VALUES (2,24,3,'C. java Main Hello World',1);
INSERT INTO ANSWER VALUES (2,24,4,'D. java Main (Hello World)',0);
INSERT INTO ANSWER VALUES (2,25,1,'A. 0  が表示される',0);
INSERT INTO ANSWER VALUES (2,25,2,'B. 何も表示されない',0);
INSERT INTO ANSWER VALUES (2,25,3,'C. コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (2,25,4,'D. 実行時に例外がスローされる',1);
INSERT INTO ANSWER VALUES (3,1,1,'A. 2.5が表示される',0);
INSERT INTO ANSWER VALUES (3,1,2,'B. 2   が表示される',1);
INSERT INTO ANSWER VALUES (3,1,3,'C. コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,1,4,'D. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,2,1,'A. 6   が表示される',0);
INSERT INTO ANSWER VALUES (3,2,2,'B. 6.0が表示される',1);
INSERT INTO ANSWER VALUES (3,2,3,'C. コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,2,4,'D. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,3,1,'A. 1   が表示される',1);
INSERT INTO ANSWER VALUES (3,3,2,'B. 3   が表示される',0);
INSERT INTO ANSWER VALUES (3,3,3,'C. コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,3,4,'D. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,4,1,'A. 2   が表示される',0);
INSERT INTO ANSWER VALUES (3,4,2,'B. 6   が表示される',1);
INSERT INTO ANSWER VALUES (3,4,3,'C. コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,4,4,'D. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,5,1,'A.  1  が表示される',0);
INSERT INTO ANSWER VALUES (3,5,2,'B.  0  が表示される',1);
INSERT INTO ANSWER VALUES (3,5,3,'C.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,5,4,'D.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,6,1,'A.  105が表示される',1);
INSERT INTO ANSWER VALUES (3,6,2,'B.  15  が表示される',0);
INSERT INTO ANSWER VALUES (3,6,3,'C.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,6,4,'D.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,7,1,'A.  5  が表示される',0);
INSERT INTO ANSWER VALUES (3,7,2,'B.  7  が表示される',0);
INSERT INTO ANSWER VALUES (3,7,3,'C.  8  が表示される',1);
INSERT INTO ANSWER VALUES (3,7,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,7,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,8,1,'A.  3  が表示される',0);
INSERT INTO ANSWER VALUES (3,8,2,'B. -4  が表示される',1);
INSERT INTO ANSWER VALUES (3,8,3,'C. -4.5が表示される',0);
INSERT INTO ANSWER VALUES (3,8,4,'D. コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,8,5,'E. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,9,1,'A.  155が表示される',1);
INSERT INTO ANSWER VALUES (3,9,2,'B.  20  が表示される',0);
INSERT INTO ANSWER VALUES (3,9,3,'C.  5105が表示される',0);
INSERT INTO ANSWER VALUES (3,9,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,9,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,10,1,'A.  6  が表示される',0);
INSERT INTO ANSWER VALUES (3,10,2,'B.  7  が表示される',0);
INSERT INTO ANSWER VALUES (3,10,3,'C.  8  が表示される',1);
INSERT INTO ANSWER VALUES (3,10,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,10,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,11,1,'A.  「A」と表示される',0);
INSERT INTO ANSWER VALUES (3,11,2,'B.  何も表示されない',0);
INSERT INTO ANSWER VALUES (3,11,3,'C.  コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (3,11,4,'D.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,12,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (3,12,2,'B.  「BC」と表示される',1);
INSERT INTO ANSWER VALUES (3,12,3,'C.  「ABC」と表示される',0);
INSERT INTO ANSWER VALUES (3,12,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,12,5,'E. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,13,1,'A.  「AC」と表示される',0);
INSERT INTO ANSWER VALUES (3,13,2,'B.  「BC」と表示される',1);
INSERT INTO ANSWER VALUES (3,13,3,'C.  「C」  と表示される',0);
INSERT INTO ANSWER VALUES (3,13,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,13,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,14,1,'A.  「same」と表示される',1);
INSERT INTO ANSWER VALUES (3,14,2,'B.  「different」と表示される',0);
INSERT INTO ANSWER VALUES (3,14,3,'C.  何も表示されない',0);
INSERT INTO ANSWER VALUES (3,14,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,15,1,'A.  「A」と表示される',0);
INSERT INTO ANSWER VALUES (3,15,2,'B.  「B」と表示される',0);
INSERT INTO ANSWER VALUES (3,15,3,'C.  「C」と表示される',1);
INSERT INTO ANSWER VALUES (3,15,4,'D. コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,15,5,'E. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,16,1,'A.  「A」と表示される',0);
INSERT INTO ANSWER VALUES (3,16,2,'B.  「B」と表示される',1);
INSERT INTO ANSWER VALUES (3,16,3,'C.  「C」と表示される',0);
INSERT INTO ANSWER VALUES (3,16,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,16,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,17,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (3,17,2,'B.  「a=0,b=0」と表示される',0);
INSERT INTO ANSWER VALUES (3,17,3,'C.  「a=1,b=1」と表示される',0);
INSERT INTO ANSWER VALUES (3,17,4,'D.  「a=1,b=0」と表示される',1);
INSERT INTO ANSWER VALUES (3,17,5,'E.  「a=0,b=1」と表示される',0);
INSERT INTO ANSWER VALUES (3,18,1,'A.  5行目  when 1:<br>
　　　8行目  when 2:',0);
INSERT INTO ANSWER VALUES (3,18,2,'B.  5行目  else  1:<br>
　　　8行目  else 2:',0);
INSERT INTO ANSWER VALUES (3,18,3,'C.  5行目  while 1:<br>
　　　8行目  while 2:',0);
INSERT INTO ANSWER VALUES (3,18,4,'D.  5行目  case 1:<br>
　　　8行目  case 2:',1);
INSERT INTO ANSWER VALUES (3,19,1,'A.  「A」と表示される',0);
INSERT INTO ANSWER VALUES (3,19,2,'B.  「B」と表示される',0);
INSERT INTO ANSWER VALUES (3,19,3,'C.  「C」と表示される',0);
INSERT INTO ANSWER VALUES (3,19,4,'D.  コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (3,19,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,20,1,'A.  end:',0);
INSERT INTO ANSWER VALUES (3,20,2,'B.  finally:',0);
INSERT INTO ANSWER VALUES (3,20,3,'C.  default:',1);
INSERT INTO ANSWER VALUES (3,20,4,'D.  exit:',0);
INSERT INTO ANSWER VALUES (3,21,1,'A.  「BC」と表示される',0);
INSERT INTO ANSWER VALUES (3,21,2,'B.  「B」  と表示される',0);
INSERT INTO ANSWER VALUES (3,21,3,'C.  「AB」と表示される',1);
INSERT INTO ANSWER VALUES (3,21,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,21,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,22,1,'A.  「本」  と表示される',0);
INSERT INTO ANSWER VALUES (3,22,2,'B.  「ゲーム」と表示される',0);
INSERT INTO ANSWER VALUES (3,22,3,'C.  「その他」と表示される',1);
INSERT INTO ANSWER VALUES (3,22,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,22,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (3,23,1,'A.  「ABC」と表示される',1);
INSERT INTO ANSWER VALUES (3,23,2,'B.  「AB」  と表示される',0);
INSERT INTO ANSWER VALUES (3,23,3,'C.  「A」    と表示される',0);
INSERT INTO ANSWER VALUES (3,23,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (3,23,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (4,1,1,'A.  i = 5',0);
INSERT INTO ANSWER VALUES (4,1,2,'B.  i = 1; i < 5',0);
INSERT INTO ANSWER VALUES (4,1,3,'C.  i < 5',1);
INSERT INTO ANSWER VALUES (4,1,4,'D. i < 5; i = i +1',0);
INSERT INTO ANSWER VALUES (4,2,1,'A.  4  が表示される',0);
INSERT INTO ANSWER VALUES (4,2,2,'B.  5  が表示される',1);
INSERT INTO ANSWER VALUES (4,2,3,'C.  6  が表示される',0);
INSERT INTO ANSWER VALUES (4,2,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (4,2,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (4,3,1,'A.  「i=8,j=1」と表示される',0);
INSERT INTO ANSWER VALUES (4,3,2,'B.  「i=16,j=2」と表示される',1);
INSERT INTO ANSWER VALUES (4,3,3,'C.  「i=32,j=2」と表示される',0);
INSERT INTO ANSWER VALUES (4,3,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (4,3,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (4,4,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (4,4,2,'B.  「LOOP」が1回表示される',0);
INSERT INTO ANSWER VALUES (4,4,3,'C.  「LOOP」が2回表示される',1);
INSERT INTO ANSWER VALUES (4,4,4,'D.  「LOOP」が3回表示される',0);
INSERT INTO ANSWER VALUES (4,4,5,'E.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (4,4,6,'F.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (4,5,1,'A.  int i = 0; i++; i < 5',0);
INSERT INTO ANSWER VALUES (4,5,2,'B. int i = 0; i < 5; i++',1);
INSERT INTO ANSWER VALUES (4,5,3,'C. i < 5; int i = 0; i++',0);
INSERT INTO ANSWER VALUES (4,5,4,'D. i = 0; i < 5; i++',0);
INSERT INTO ANSWER VALUES (4,6,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (4,6,2,'B.  「LOOP」が1回表示される',0);
INSERT INTO ANSWER VALUES (4,6,3,'C.  「LOOP」が無限に表示される',1);
INSERT INTO ANSWER VALUES (4,6,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (4,6,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (4,7,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (4,7,2,'B.  「0 1 2」と表示される',1);
INSERT INTO ANSWER VALUES (4,7,3,'C.  「0 1 2 3」と表示される',0);
INSERT INTO ANSWER VALUES (4,7,4,'4.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (4,7,5,'5.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (4,8,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (4,8,2,'B.  「LOOP」が3回表示される',0);
INSERT INTO ANSWER VALUES (4,8,3,'C.  「LOOP」が4回表示される',1);
INSERT INTO ANSWER VALUES (4,8,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (4,8,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (4,9,1,'A.  何も表示されない',1);
INSERT INTO ANSWER VALUES (4,9,2,'B.  「0 1 2」と表示される',0);
INSERT INTO ANSWER VALUES (4,9,3,'C.  「0 1 2 3」と表示される',0);
INSERT INTO ANSWER VALUES (4,9,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (4,9,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (4,10,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (4,10,2,'B.  「LOOP」が2回表示される',1);
INSERT INTO ANSWER VALUES (4,10,3,'C.  「LOOP」が3回表示される',0);
INSERT INTO ANSWER VALUES (4,10,4,'D.  「LOOP」が4回表示される',0);
INSERT INTO ANSWER VALUES (4,10,5,'E.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (4,10,6,'F.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (4,11,1,'A.  「LOOP」が無限に表示される',0);
INSERT INTO ANSWER VALUES (4,11,2,'B.  「LOOP」が5回表示される',1);
INSERT INTO ANSWER VALUES (4,11,3,'C.  「LOOP」が6回表示される',0);
INSERT INTO ANSWER VALUES (4,11,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (4,11,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (4,12,1,'A.  int e : array',1);
INSERT INTO ANSWER VALUES (4,12,2,'B.  int e ; array',0);
INSERT INTO ANSWER VALUES (4,12,3,'C.  array : int e',0);
INSERT INTO ANSWER VALUES (4,12,4,'D.  e : array',0);
INSERT INTO ANSWER VALUES (4,13,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (4,13,2,'B.  「A」と表示される',0);
INSERT INTO ANSWER VALUES (4,13,3,'C.  「A B C」と表示される',1);
INSERT INTO ANSWER VALUES (4,13,4,'D. コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (4,13,5,'E. 実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (4,14,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (4,14,2,'B.  「0 1 2」と表示される',0);
INSERT INTO ANSWER VALUES (4,14,3,'C.  「0 1 2 3」と表示される',0);
INSERT INTO ANSWER VALUES (4,14,4,'D.  コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (4,14,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (4,15,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (4,15,2,'B.  「LOOP」が1回表示される',1);
INSERT INTO ANSWER VALUES (4,15,3,'C.  「LOOP」が3回表示される',0);
INSERT INTO ANSWER VALUES (4,15,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (4,15,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (4,16,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (4,16,2,'B.  「LOOP」が6回表示される',1);
INSERT INTO ANSWER VALUES (4,16,3,'C.  「LOOP」が9回表示される',0);
INSERT INTO ANSWER VALUES (4,16,4,'D.  「LOOP」が12回表示される',0);
INSERT INTO ANSWER VALUES (4,17,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (4,17,2,'B.  「LOOP」が1回表示される',0);
INSERT INTO ANSWER VALUES (4,17,3,'C.  「LOOP」が2回表示される',0);
INSERT INTO ANSWER VALUES (4,17,4,'D.  「LOOP」が3回表示される',1);
INSERT INTO ANSWER VALUES (4,18,1,'A.  「LOOP」が無限に表示される',1);
INSERT INTO ANSWER VALUES (4,18,2,'B.  「LOOP」が1回表示される',0);
INSERT INTO ANSWER VALUES (4,18,3,'C.  「LOOP」が3回表示される',0);
INSERT INTO ANSWER VALUES (4,18,4,'D.  「LOOP」が4回表示される',0);
INSERT INTO ANSWER VALUES (4,19,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (4,19,2,'B.  「0 1 2 4」と表示される',0);
INSERT INTO ANSWER VALUES (4,19,3,'C.  「0 1 0 1」と表示される',0);
INSERT INTO ANSWER VALUES (4,19,4,'D.  「0 1 0 2」と表示される',1);
INSERT INTO ANSWER VALUES (4,19,5,'E.  「0 1 0 2 0 3」と表示される',0);
INSERT INTO ANSWER VALUES (4,20,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (4,20,2,'B.  「LOOP」が1回表示される',0);
INSERT INTO ANSWER VALUES (4,20,3,'C.  「LOOP」が2回表示される',1);
INSERT INTO ANSWER VALUES (4,20,4,'D.  「LOOP」が3回表示される',0);
INSERT INTO ANSWER VALUES (5,1,1,'A.  同種の異なるインスタンスを同じ型で扱う',0);
INSERT INTO ANSWER VALUES (5,1,2,'B.  公開すべきものと非公開にすべきものを区別して扱う',0);
INSERT INTO ANSWER VALUES (5,1,3,'C.  関係するものをひとまとめにする',1);
INSERT INTO ANSWER VALUES (5,1,4,'D.  クラスのフィールドを隠蔽し、他のクラスからは直接使えないようにする',0);
INSERT INTO ANSWER VALUES (5,2,1,'A.  すべてのフィールドのアクセス修飾子をprivateにする',0);
INSERT INTO ANSWER VALUES (5,2,2,'B.  フィールドにアクセスするためのgetterメソッドとsetterメソッドを追加する',0);
INSERT INTO ANSWER VALUES (5,2,3,'C.  corporateNameとcorporateAddressフィールドをほかのクラスに移動する',1);
INSERT INTO ANSWER VALUES (5,2,4,'D.  名前を名乗って挨拶するメソッドを追加する',1);
INSERT INTO ANSWER VALUES (5,2,5,'E.  給与計算メソッドを追加する',0);
INSERT INTO ANSWER VALUES (5,3,1,'A.  データ隠蔽',1);
INSERT INTO ANSWER VALUES (5,3,2,'B.  情報隠蔽',0);
INSERT INTO ANSWER VALUES (5,3,3,'C.  抽象化',0);
INSERT INTO ANSWER VALUES (5,3,4,'D.  データ抽象',0);
INSERT INTO ANSWER VALUES (5,4,1,'A.  public final',0);
INSERT INTO ANSWER VALUES (5,4,2,'B.  public static',0);
INSERT INTO ANSWER VALUES (5,4,3,'C.  private',1);
INSERT INTO ANSWER VALUES (5,4,4,'D.  private static',0);
INSERT INTO ANSWER VALUES (5,4,5,'E.  private final',0);
INSERT INTO ANSWER VALUES (5,5,1,'A.  関係するデータとそのデータを扱う処理をひとまとめにする',0);
INSERT INTO ANSWER VALUES (5,5,2,'B.  属性の公開範囲を制限する',1);
INSERT INTO ANSWER VALUES (5,5,3,'C.  getterやsetterなどのアクセサメソッドを提供する',0);
INSERT INTO ANSWER VALUES (5,5,4,'D.  実装の詳細を隠蔽する',0);
INSERT INTO ANSWER VALUES (5,6,1,'A.  抽象化',1);
INSERT INTO ANSWER VALUES (5,6,2,'B.  カプセル化',0);
INSERT INTO ANSWER VALUES (5,6,3,'C.  データ隠蔽',0);
INSERT INTO ANSWER VALUES (5,6,4,'D.  情報隠蔽',0);
INSERT INTO ANSWER VALUES (5,7,1,'A.  「A」と表示される',0);
INSERT INTO ANSWER VALUES (5,7,2,'B.  「B」と表示される',1);
INSERT INTO ANSWER VALUES (5,7,3,'C.  「A」「B」と表示される',0);
INSERT INTO ANSWER VALUES (5,7,4,'D.  「B」「A」と表示される',0);
INSERT INTO ANSWER VALUES (5,7,5,'E.  Bクラスでコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (5,7,6,'F.  Mainクラスでコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (5,7,7,'G.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (5,8,1,'A.  「Parent」と表示される',0);
INSERT INTO ANSWER VALUES (5,8,2,'B.  「Child」と表示される',0);
INSERT INTO ANSWER VALUES (5,8,3,'C.  Childクラスの2行目でコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (5,8,4,'D.  Mainクラスの3行目でコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (5,8,5,'E.  Mainクラスの4行目でコンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (5,8,6,'F.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (5,9,1,'A.  変更されたクラスのサブクラスに変更の影響が及ばない',0);
INSERT INTO ANSWER VALUES (5,9,2,'B.  変更されたクラスのスーパークラスに変更の影響が及ばない',0);
INSERT INTO ANSWER VALUES (5,9,3,'C.  変更されたクラスを使うクラスに、変更の影響が及ばない',1);
INSERT INTO ANSWER VALUES (5,9,4,'D.  インターフェースの変更が実現クラスに及ばない',0);
INSERT INTO ANSWER VALUES (5,10,1,'A.  公開すべきものと非公開にすべきものを区別して扱う',1);
INSERT INTO ANSWER VALUES (5,10,2,'B.  関係するデータをひとまとめにして扱える',0);
INSERT INTO ANSWER VALUES (5,10,3,'C.  外部からフィールドを直接操作できないようにすることができる',0);
INSERT INTO ANSWER VALUES (5,10,4,'D.  異なる引数を受け取る同名のメソッドを複数定義できる',0);
INSERT INTO ANSWER VALUES (5,11,1,'A.  フィールドのアクセス修飾子をprivateにする',0);
INSERT INTO ANSWER VALUES (5,11,2,'B.  getterやsetterなどのアクセサメソッドを提供する',0);
INSERT INTO ANSWER VALUES (5,11,3,'C.  公開メソッドを集めたインタフェースを用意する',1);
INSERT INTO ANSWER VALUES (5,11,4,'D.  protectedで修飾したクラスを宣言する',0);
INSERT INTO ANSWER VALUES (5,11,5,'E.  パッケージ宣言を追加する',1);
INSERT INTO ANSWER VALUES (5,11,6,'F.  コンストラクタをprotectedにする',1);
INSERT INTO ANSWER VALUES (5,12,1,'A.  インタフェースは型を定義するためのものである',0);
INSERT INTO ANSWER VALUES (5,12,2,'B.  インタフェースには実装を定義できない',0);
INSERT INTO ANSWER VALUES (5,12,3,'C.  インタフェースはインスタンス化できない',0);
INSERT INTO ANSWER VALUES (5,12,4,'D.  インタフェースにはメソッド宣言だけが定義できる',1);
INSERT INTO ANSWER VALUES (5,13,1,'A.  抽象化',1);
INSERT INTO ANSWER VALUES (5,13,2,'B.  情報隠蔽',1);
INSERT INTO ANSWER VALUES (5,13,3,'C.  データ隠蔽',0);
INSERT INTO ANSWER VALUES (5,13,4,'D.  カプセル化',0);
INSERT INTO ANSWER VALUES (5,14,1,'A.　public class B {<br>
　　　　public void sample() {<br>
　　　　　　A a = new A();<br>
　　　　}<br>
　　}',0);
INSERT INTO ANSWER VALUES (5,14,2,'B.  public class A {<br>
　　　　public void sample() {<br>
　　　　　　B b = new B();<br>
　　　　}<br>
　　}',0);
INSERT INTO ANSWER VALUES (5,14,3,'C.  public class B {<br>
　　　　private A a:<br>
　　}',0);
INSERT INTO ANSWER VALUES (5,14,4,'D.  public class A {<br>
　　　　private B b:<br>
　　}',1);
INSERT INTO ANSWER VALUES (5,15,1,'A.  A is-a B',0);
INSERT INTO ANSWER VALUES (5,15,2,'B.  C is-a A',1);
INSERT INTO ANSWER VALUES (5,15,3,'C.  B is-s A',1);
INSERT INTO ANSWER VALUES (5,15,4,'D.  D is-a B',0);
INSERT INTO ANSWER VALUES (5,15,5,'E.  B is-a D',0);
INSERT INTO ANSWER VALUES (5,15,6,'F.  B is-a C',0);
INSERT INTO ANSWER VALUES (5,16,1,'A.  CdPlayerクラスでコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (5,16,2,'B.  Mp3Playerクラスでコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (5,16,3,'C.  Mainクラスでコンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (5,16,4,'D. Mainクラスの実行中に例外がスローされる',0);
INSERT INTO ANSWER VALUES (5,16,5,'E.  「ABA」と表示される',0);
INSERT INTO ANSWER VALUES (5,16,6,'F.  「AB」と表示される',0);
INSERT INTO ANSWER VALUES (5,17,1,'A.  具象クラスは、インスタンス化できない',0);
INSERT INTO ANSWER VALUES (5,17,2,'B.  抽象クラスは、継承されることを前提としたクラスである',1);
INSERT INTO ANSWER VALUES (5,17,3,'C.  抽象クラスは、インスタンス化できる',0);
INSERT INTO ANSWER VALUES (5,17,4,'D.  具象クラスは、継承されることを前提としたクラスである',0);
INSERT INTO ANSWER VALUES (6,1,1,'A.  EmployeeList',1);
INSERT INTO ANSWER VALUES (6,1,2,'B.  $EmployeeList',1);
INSERT INTO ANSWER VALUES (6,1,3,'C.  1EmployeeList',0);
INSERT INTO ANSWER VALUES (6,1,4,'D.  Employee-List',0);
INSERT INTO ANSWER VALUES (6,1,5,'E.  %EmployeeList',0);
INSERT INTO ANSWER VALUES (6,2,1,'A.  フィールド',1);
INSERT INTO ANSWER VALUES (6,2,2,'B.  メソッド',1);
INSERT INTO ANSWER VALUES (6,2,3,'C.  コンストラクタ',1);
INSERT INTO ANSWER VALUES (6,2,4,'D.  パッケージ文',0);
INSERT INTO ANSWER VALUES (6,3,1,'A.  class ClassA(int a) {<br>
　　　　// クラス内の定義<br>
　　}',0);
INSERT INTO ANSWER VALUES (6,3,2,'B.  ClassA {<br>
　　　　// クラス内の定義<br>
　　}',0);
INSERT INTO ANSWER VALUES (6,3,3,'C.  class ClassA() {<br>
　　　　// クラス内の定義<br>
　　}',0);
INSERT INTO ANSWER VALUES (6,3,4,'D.  class ClassA {<br>
　　　　// クラス内の定義<br>
　　}',1);
INSERT INTO ANSWER VALUES (6,4,1,'A.  ClassA classA = new ClassA;',0);
INSERT INTO ANSWER VALUES (6,4,2,'B.  ClassA classA = new ClassA();',1);
INSERT INTO ANSWER VALUES (6,4,3,'C.  ClassA classA = create ClassA();',0);
INSERT INTO ANSWER VALUES (6,4,4,'D.  ClassA classA = create ClassA;',0);
INSERT INTO ANSWER VALUES (6,5,1,'A.  コンストラクタの戻り値型はvoidにする',0);
INSERT INTO ANSWER VALUES (6,5,2,'B.  コンストラクタには、引数を定義できない',0);
INSERT INTO ANSWER VALUES (6,5,3,'C.  コンストラクタ名は、クラス名と同じにする',1);
INSERT INTO ANSWER VALUES (6,5,4,'D.  コンストラクタには、戻り値型を指定できる',0);
INSERT INTO ANSWER VALUES (6,6,1,'A.  classA.doMethod();',1);
INSERT INTO ANSWER VALUES (6,6,2,'B.  classA+doMethod();',0);
INSERT INTO ANSWER VALUES (6,6,3,'C.  classA doMethod();',0);
INSERT INTO ANSWER VALUES (6,6,4,'D.  classA:doMethod();',0);
INSERT INTO ANSWER VALUES (6,7,1,'A.  1個',1);
INSERT INTO ANSWER VALUES (6,7,2,'B.  2個',0);
INSERT INTO ANSWER VALUES (6,7,3,'C.  3個',0);
INSERT INTO ANSWER VALUES (6,7,4,'4.  4個',0);
INSERT INTO ANSWER VALUES (6,8,1,'A.  メソッド名、引数の数',0);
INSERT INTO ANSWER VALUES (6,8,2,'B.  メソッド名、引数の型と順番',0);
INSERT INTO ANSWER VALUES (6,8,3,'C.  メソッド名、戻り値型',0);
INSERT INTO ANSWER VALUES (6,8,4,'D.  メソッド名のみ',1);
INSERT INTO ANSWER VALUES (6,9,1,'A.  引数の数',1);
INSERT INTO ANSWER VALUES (6,9,2,'B.  引数の名前',0);
INSERT INTO ANSWER VALUES (6,9,3,'C.  アクセス修飾子',0);
INSERT INTO ANSWER VALUES (6,9,4,'D.  引数の型',1);
INSERT INTO ANSWER VALUES (6,9,5,'E.  メソッド名',1);
INSERT INTO ANSWER VALUES (6,9,6,'F.  戻り値の型',0);
INSERT INTO ANSWER VALUES (6,9,7,'G.  引数の順番',1);
INSERT INTO ANSWER VALUES (6,10,1,'A.  String doMethod(int a) {<br>
　　　　return "abc";<br>
　　}',0);
INSERT INTO ANSWER VALUES (6,10,2,'B.   int doMethod() {<br>
　　　　return 1;<br>
　　}',1);
INSERT INTO ANSWER VALUES (6,10,3,'C.   int doMethod(int a, int b) {<br>
　　　　return 1;<br>
　　}',1);
INSERT INTO ANSWER VALUES (6,10,4,'D.   int didMethod(int a) {<br>
　　　　return 1;<br>
　　}',0);
INSERT INTO ANSWER VALUES (6,11,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (6,11,2,'B.  「doMethod-A」と表示される',0);
INSERT INTO ANSWER VALUES (6,11,3,'C.  「doMethod-B」と表示される',1);
INSERT INTO ANSWER VALUES (6,11,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (6,11,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (6,12,1,'A.  public void Account(int balance) {<br>
　　　　this.balance = balance;<br>
　　}',0);
INSERT INTO ANSWER VALUES (6,12,2,'B.  public Account() {<br>
　　　　this.balance = 0;<br>
　　}',1);
INSERT INTO ANSWER VALUES (6,12,3,'C.  public static Account() {<br>
　　　　this.balance = 0;<br>
　　}',0);
INSERT INTO ANSWER VALUES (6,12,4,'D.  public Constructor(int balance) {<br>
　　　　this.balance = balance;<br>
　　}',0);
INSERT INTO ANSWER VALUES (6,13,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (6,13,2,'B.  「Santa Clara」と表示される',0);
INSERT INTO ANSWER VALUES (6,13,3,'C.  コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (6,13,4,'D.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (6,14,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (6,14,2,'B.  「none」と表示される',0);
INSERT INTO ANSWER VALUES (6,14,3,'C.  「James」と表示される',1);
INSERT INTO ANSWER VALUES (6,14,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (6,14,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (6,15,1,'A.  自クラスのインスタンスを指し示し、メソッドの呼び出しに利用する',0);
INSERT INTO ANSWER VALUES (6,15,2,'B.  自クラスのコンストラクタを指し示し、コンストラクタの呼び出しに利用する',1);
INSERT INTO ANSWER VALUES (6,15,3,'C.  自クラスのインスタンスを指し示し、フィールドの参照に利用する',0);
INSERT INTO ANSWER VALUES (6,15,4,'D.  自クラスのコンストラクタを指し示し、メソッドの呼び出しに利用する',0);
INSERT INTO ANSWER VALUES (6,16,1,'A.  this("none", 0);',1);
INSERT INTO ANSWER VALUES (6,16,2,'B.  Book("none", 0);',0);
INSERT INTO ANSWER VALUES (6,16,3,'C.  this("none");',0);
INSERT INTO ANSWER VALUES (6,16,4,'D.  Book("none");',0);
INSERT INTO ANSWER VALUES (6,17,1,'A.  name = name;',0);
INSERT INTO ANSWER VALUES (6,17,2,'B.  this.name = name;',1);
INSERT INTO ANSWER VALUES (6,17,3,'C.  name = this.name;',0);
INSERT INTO ANSWER VALUES (6,17,4,'D.  String name = name;',0);
INSERT INTO ANSWER VALUES (6,18,1,'A.  public   ---  すべてのクラスからアクセス可能',1);
INSERT INTO ANSWER VALUES (6,18,2,'B.  private  ---  同一パッケージ内のクラスと、サブクラスからアクセス可能',0);
INSERT INTO ANSWER VALUES (6,18,3,'C.  public   ---  同一パッケージ内のすべてのクラスからアクセス可能',0);
INSERT INTO ANSWER VALUES (6,18,4,'D.  private  ---  同一クラスからアクセス可能',1);
INSERT INTO ANSWER VALUES (6,19,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (6,19,2,'B.  「a food」と表示される',0);
INSERT INTO ANSWER VALUES (6,19,3,'C.  「b food」と表示される',0);
INSERT INTO ANSWER VALUES (6,19,4,'D.  コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (6,19,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (6,20,1,'A.  void',0);
INSERT INTO ANSWER VALUES (6,20,2,'B.  static',1);
INSERT INTO ANSWER VALUES (6,20,3,'C.  final',0);
INSERT INTO ANSWER VALUES (6,20,4,'D.  public',0);
INSERT INTO ANSWER VALUES (6,21,1,'A.  ClassA.static.number',0);
INSERT INTO ANSWER VALUES (6,21,2,'B.  ClassA.number',1);
INSERT INTO ANSWER VALUES (6,21,3,'C.  classA.number',0);
INSERT INTO ANSWER VALUES (6,21,4,'D.  static.ClassA.number',0);
INSERT INTO ANSWER VALUES (6,22,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (6,22,2,'B.  0  が表示される',0);
INSERT INTO ANSWER VALUES (6,22,3,'C.  1  が表示される',1);
INSERT INTO ANSWER VALUES (6,22,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (6,22,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (6,23,1,'A.  public',0);
INSERT INTO ANSWER VALUES (6,23,2,'B.  this',0);
INSERT INTO ANSWER VALUES (6,23,3,'C.  super',0);
INSERT INTO ANSWER VALUES (6,23,4,'D.  static',1);
INSERT INTO ANSWER VALUES (6,24,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (6,24,2,'B.  「hoge」と表示される',1);
INSERT INTO ANSWER VALUES (6,24,3,'C.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (6,24,4,'D.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (6,25,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (6,25,2,'B.  0が表示される',0);
INSERT INTO ANSWER VALUES (6,25,3,'C.  コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (6,25,4,'D.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (6,26,1,'A.  0  が表示される',0);
INSERT INTO ANSWER VALUES (6,26,2,'B.  1  が表示される',0);
INSERT INTO ANSWER VALUES (6,26,3,'C.  2  が表示される',1);
INSERT INTO ANSWER VALUES (6,26,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (6,26,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (7,1,1,'A.  public class A extends B {<br>
　　　　// any code<br>
　　}',0);
INSERT INTO ANSWER VALUES (7,1,2,'B.   public class B extends A {<br>
　　　　// any code<br>
　　}',1);
INSERT INTO ANSWER VALUES (7,1,3,'C.   public class A implements B {<br>
　　　　// any code<br>
　　}',0);
INSERT INTO ANSWER VALUES (7,1,4,'D.   public class B implements A {<br>
　　　　// any code<br>
　　}',0);
INSERT INTO ANSWER VALUES (7,2,1,'A.  methodAのみ',0);
INSERT INTO ANSWER VALUES (7,2,2,'B.  methodBのみ',0);
INSERT INTO ANSWER VALUES (7,2,3,'C.  methodCのみ',0);
INSERT INTO ANSWER VALUES (7,2,4,'D.  methodAとmethodB',0);
INSERT INTO ANSWER VALUES (7,2,5,'E.  methodAとmethodC',1);
INSERT INTO ANSWER VALUES (7,2,6,'F.  methodBとmethodC',0);
INSERT INTO ANSWER VALUES (7,2,7,'G.  どのメソッドも持たない',0);
INSERT INTO ANSWER VALUES (7,3,1,'A.  SubClassの2行目でコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (7,3,2,'B.  Mainクラスの4行目の実行中に例外がスローされる',0);
INSERT INTO ANSWER VALUES (7,3,3,'C.  0が表示される',1);
INSERT INTO ANSWER VALUES (7,3,4,'D.  10が表示される',0);
INSERT INTO ANSWER VALUES (7,4,1,'A.  publicなメソッド',0);
INSERT INTO ANSWER VALUES (7,4,2,'B.  privateなインスタンスフィールド',1);
INSERT INTO ANSWER VALUES (7,4,3,'C.  コンストラクタ',1);
INSERT INTO ANSWER VALUES (7,4,4,'D.  finalなフィールド',0);
INSERT INTO ANSWER VALUES (7,5,1,'A.  「A」と表示される',0);
INSERT INTO ANSWER VALUES (7,5,2,'B.  「B」と表示される',0);
INSERT INTO ANSWER VALUES (7,5,3,'C.  「A」「B」と表示される',1);
INSERT INTO ANSWER VALUES (7,5,4,'D.  「B」「A」と表示される',0);
INSERT INTO ANSWER VALUES (7,6,1,'A.  コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (7,6,2,'B.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (7,6,3,'C.  「nulltest」と表示される',0);
INSERT INTO ANSWER VALUES (7,6,4,'D.  「test」と表示される',0);
INSERT INTO ANSWER VALUES (7,7,1,'A.  SubClass("B");',0);
INSERT INTO ANSWER VALUES (7,7,2,'B.  this("B");',1);
INSERT INTO ANSWER VALUES (7,7,3,'C.  super("B");',0);
INSERT INTO ANSWER VALUES (7,7,4,'D.  SuperClass("B");',0);
INSERT INTO ANSWER VALUES (7,8,1,'A.  「A」と表示される',0);
INSERT INTO ANSWER VALUES (7,8,2,'B.  「B」と表示される',0);
INSERT INTO ANSWER VALUES (7,8,3,'C.  「A」「B」と表示される',0);
INSERT INTO ANSWER VALUES (7,8,4,'D.  「B」「A」と表示される',0);
INSERT INTO ANSWER VALUES (7,8,5,'E.  コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (7,9,1,'A.  カプセル化',0);
INSERT INTO ANSWER VALUES (7,9,2,'B.  ポリモーフィズム',0);
INSERT INTO ANSWER VALUES (7,9,3,'C.  オーバーロード',0);
INSERT INTO ANSWER VALUES (7,9,4,'D.  オーバーライド',1);
INSERT INTO ANSWER VALUES (7,10,1,'A.  public void hello() {<br>
　　　　System.out.println("B");<br>
　　}<br>',1);
INSERT INTO ANSWER VALUES (7,10,2,'B.  public String hello() {<br>
　　　　return "B";<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (7,10,3,'C.   public void hello(String val) {<br>
　　　　System.out.println(val);<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (7,10,4,'D.  void hello() {<br>
　　　　System.out.println("B");<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (7,11,1,'A.  public void hello() throws Exception {<br>
　　　　// any code<br>
　　}<br>',1);
INSERT INTO ANSWER VALUES (7,11,2,'B.  public void hello() {<br>
　　　　// any code<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (7,11,3,'C.  public void hello() throws NullPointerException {<br>
　　　　// any code<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (7,11,4,'D.  public void hello() throws RuntimeException {<br>
　　　　// any code<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (7,12,1,'A.  sample();',0);
INSERT INTO ANSWER VALUES (7,12,2,'B.  this.sample();',0);
INSERT INTO ANSWER VALUES (7,12,3,'C.  super.sample();',1);
INSERT INTO ANSWER VALUES (7,12,4,'D.  SuperClass.sample();',0);
INSERT INTO ANSWER VALUES (7,13,1,'A.  protected',0);
INSERT INTO ANSWER VALUES (7,13,2,'B.  static',1);
INSERT INTO ANSWER VALUES (7,13,3,'C.  final',1);
INSERT INTO ANSWER VALUES (7,13,4,'D.  abstract',0);
INSERT INTO ANSWER VALUES (7,13,5,'E.  public',1);
INSERT INTO ANSWER VALUES (7,13,6,'F.  native',0);
INSERT INTO ANSWER VALUES (7,13,7,'G. synchronized',0);
INSERT INTO ANSWER VALUES (7,14,1,'A.  protected',0);
INSERT INTO ANSWER VALUES (7,14,2,'B.  final',0);
INSERT INTO ANSWER VALUES (7,14,3,'C.  abstract',1);
INSERT INTO ANSWER VALUES (7,14,4,'D.  public',1);
INSERT INTO ANSWER VALUES (7,14,5,'E.  native',0);
INSERT INTO ANSWER VALUES (7,14,6,'F.  synchronized',0);
INSERT INTO ANSWER VALUES (7,15,1,'A.  クラスは1つだけインタフェースを実現できる',0);
INSERT INTO ANSWER VALUES (7,15,2,'B.  インタフェースは、他のインタフェースを継承できる',1);
INSERT INTO ANSWER VALUES (7,15,3,'C.  インタフェースは、単一継承のみ可能である',0);
INSERT INTO ANSWER VALUES (7,15,4,'D.  クラスはインタフェースを多重実現できる',1);
INSERT INTO ANSWER VALUES (7,15,5,'E.  インタフェースには、抽象メソッドが定義できる',1);
INSERT INTO ANSWER VALUES (7,15,6,'F.  インタフェースには、具象メソッドが定義できる',0);
INSERT INTO ANSWER VALUES (7,16,1,'A.  すべてのメソッドは実装済みでなければならない',0);
INSERT INTO ANSWER VALUES (7,16,2,'B.  抽象メソッドを持つことができる',1);
INSERT INTO ANSWER VALUES (7,16,3,'C.  実現しているインタフェースのメソッドを実装する必要はない',1);
INSERT INTO ANSWER VALUES (7,16,4,'D.  インスタンスを生成できる',0);
INSERT INTO ANSWER VALUES (7,16,5,'E.  抽象メソッドは、暗黙的にabstractで修飾される',0);
INSERT INTO ANSWER VALUES (7,17,1,'A.  Mainクラスの3行目でコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (7,17,2,'B.  Mainクラスの4行目でコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (7,17,3,'C.  Mainクラスの5行目でコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (7,17,4,'D.  Mainクラスの4行目で例外がスローされる',0);
INSERT INTO ANSWER VALUES (7,17,5,'E.  Mainクラスの5行目で例外がスローされる',1);
INSERT INTO ANSWER VALUES (7,17,6,'F.  正常に終了する',0);
INSERT INTO ANSWER VALUES (7,18,1,'A.  名前空間を提供する',1);
INSERT INTO ANSWER VALUES (7,18,2,'B.  パッケージ名にはドメイン名を逆にしたものを使用しなければならない',0);
INSERT INTO ANSWER VALUES (7,18,3,'C.  アクセス制御を提供する',1);
INSERT INTO ANSWER VALUES (7,18,4,'D.  クラスの分類を可能にする',1);
INSERT INTO ANSWER VALUES (7,18,5,'E.  パッケージ宣言はソースファイルの1行目に記述する',0);
INSERT INTO ANSWER VALUES (7,19,1,'A.  java.langパッケージに所属するクラスは、インポート宣言を省略できる',1);
INSERT INTO ANSWER VALUES (7,19,2,'B.  同じパッケージに所属するクラスは、インポート宣言を省略できる',1);
INSERT INTO ANSWER VALUES (7,19,3,'C.  異なるパッケージに所属するクラスを利用する場合には、必ずインポート宣言をしなければならない',0);
INSERT INTO ANSWER VALUES (7,19,4,'D.  インポート宣言は、ソースファイルの先頭行から列挙しなければならない',0);
INSERT INTO ANSWER VALUES (7,19,5,'E.  インポート宣言では、利用したいクラスが所属するパッケージ名までを指定する',0);
INSERT INTO ANSWER VALUES (8,1,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (8,1,2,'B.  「56789」が1回表示される',1);
INSERT INTO ANSWER VALUES (8,1,3,'C.  「56789」が5回表示される',0);
INSERT INTO ANSWER VALUES (8,1,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,1,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,2,1,'A.  「5:5」と表示される',0);
INSERT INTO ANSWER VALUES (8,2,2,'B.  「5:4」と表示される',0);
INSERT INTO ANSWER VALUES (8,2,3,'C.  「5:9」と表示される',0);
INSERT INTO ANSWER VALUES (8,2,4,'D.  「10:10」と表示される',1);
INSERT INTO ANSWER VALUES (8,2,5,'E.  「10:9」と表示される',0);
INSERT INTO ANSWER VALUES (8,3,1,'A.  「none aline」と表示される',0);
INSERT INTO ANSWER VALUES (8,3,2,'B.  「null aline」と表示される',0);
INSERT INTO ANSWER VALUES (8,3,3,'C.  「aline aline」と表示される',0);
INSERT INTO ANSWER VALUES (8,3,4,'D.  コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (8,3,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,4,1,'A.  Java SE',1);
INSERT INTO ANSWER VALUES (8,4,2,'B.  Java EE',0);
INSERT INTO ANSWER VALUES (8,4,3,'C.  Java ME',0);
INSERT INTO ANSWER VALUES (8,4,4,'D.  Java DB',0);
INSERT INTO ANSWER VALUES (8,5,1,'A.  「A」「B」と表示される',1);
INSERT INTO ANSWER VALUES (8,5,2,'B.  「B」「A」と表示される',0);
INSERT INTO ANSWER VALUES (8,5,3,'C.  「A」「A」と表示される',0);
INSERT INTO ANSWER VALUES (8,5,4,'D.  「B」「B」と表示される',0);
INSERT INTO ANSWER VALUES (8,5,5,'E.  Bクラスでコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,5,6,'F.  Mainクラスでコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,6,1,'A.  public void methodA(){}',1);
INSERT INTO ANSWER VALUES (8,6,2,'B.  public void methodB(int a){}',0);
INSERT INTO ANSWER VALUES (8,6,3,'C.  public int methodC(char a, int b) {<br>
　　　return 0;<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,6,4,'D.  public int methodD(int i) {<br>
　　　return 1;<br>
　　}<br>',1);
INSERT INTO ANSWER VALUES (8,7,1,'A.  クラスのコンストラクタ',1);
INSERT INTO ANSWER VALUES (8,7,2,'B.  クラスのフィールド',1);
INSERT INTO ANSWER VALUES (8,7,3,'C.  クラスの抽象メソッド',0);
INSERT INTO ANSWER VALUES (8,7,4,'D.  クラスの具象メソッド',1);
INSERT INTO ANSWER VALUES (8,7,5,'E.  インタフェースの抽象メソッド',0);
INSERT INTO ANSWER VALUES (8,7,6,'F.  クラス',0);
INSERT INTO ANSWER VALUES (8,8,1,'A.　this.size = "L";<br>
　　this("refresh");<br>',0);
INSERT INTO ANSWER VALUES (8,8,2,'B.　Photo("refresh");<br>
　　this.size = "L";<br>',0);
INSERT INTO ANSWER VALUES (8,8,3,'C.　this("refresh");<br>
　　this.size = "L";<br>',1);
INSERT INTO ANSWER VALUES (8,8,4,'D.　this.size = "L";<br>
　　Phote("refresh");<br>',0);
INSERT INTO ANSWER VALUES (8,8,5,'E.　this.Photo("refresh");<br>
　　this.size = "L";<br>',0);
INSERT INTO ANSWER VALUES (8,9,1,'A.  public class Test extends java.lang.* { }',0);
INSERT INTO ANSWER VALUES (8,9,2,'B.  public class Test extends java.lang.Object { }',1);
INSERT INTO ANSWER VALUES (8,9,3,'C.  final class Test { }',1);
INSERT INTO ANSWER VALUES (8,9,4,'D.  public class Test { }',1);
INSERT INTO ANSWER VALUES (8,9,5,'E.  public class Test implements Object { }',0);
INSERT INTO ANSWER VALUES (8,10,1,'A.  「6:14」と表示される',0);
INSERT INTO ANSWER VALUES (8,10,2,'B.  「6:20」と表示される',1);
INSERT INTO ANSWER VALUES (8,10,3,'C.  「12:20」と表示される',0);
INSERT INTO ANSWER VALUES (8,10,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,11,1,'A.　this.price = 100;<br>
　　this("sample");<br>',0);
INSERT INTO ANSWER VALUES (8,11,2,'B.　this("sample");<br>
　　this.price = 100;<br>',1);
INSERT INTO ANSWER VALUES (8,11,3,'C.　this(TMP);<br>
　　this.price = 100;<br>',0);
INSERT INTO ANSWER VALUES (8,11,4,'D.　this.price = 100;<br>
　　this(TMP);<br>',0);
INSERT INTO ANSWER VALUES (8,11,5,'E.　Sample("sample");<br>
　　this.price = 100;<br>',0);
INSERT INTO ANSWER VALUES (8,12,1,'A.  「123」が1回表示される',0);
INSERT INTO ANSWER VALUES (8,12,2,'B.  「0123」が1回表示される',0);
INSERT INTO ANSWER VALUES (8,12,3,'C.  「1234」が1回表示される',0);
INSERT INTO ANSWER VALUES (8,12,4,'D.  「1234」が無限に表示される',0);
INSERT INTO ANSWER VALUES (8,12,5,'E.  「0123」が無限に表示される',1);
INSERT INTO ANSWER VALUES (8,12,6,'F.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,13,1,'A.  「a」と表示される',0);
INSERT INTO ANSWER VALUES (8,13,2,'B.  「aa」と表示される',0);
INSERT INTO ANSWER VALUES (8,13,3,'C.  何も表示されない',1);
INSERT INTO ANSWER VALUES (8,13,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,13,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,14,1,'A.  「1:2:3」と表示される',1);
INSERT INTO ANSWER VALUES (8,14,2,'B.  「0:2:3」と表示される',0);
INSERT INTO ANSWER VALUES (8,14,3,'C.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,14,4,'D.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,15,1,'A.  「6 6 7」と表示される',0);
INSERT INTO ANSWER VALUES (8,15,2,'B.  「6 7 7」と表示される',0);
INSERT INTO ANSWER VALUES (8,15,3,'C.  「6 6 6」と表示される',0);
INSERT INTO ANSWER VALUES (8,15,4,'D.  「7 7 7」と表示される',1);
INSERT INTO ANSWER VALUES (8,15,5,'E.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,16,1,'A.  public void setVal(String val);<br>',1);
INSERT INTO ANSWER VALUES (8,16,2,'B.  private void setVal(String val);<br>',0);
INSERT INTO ANSWER VALUES (8,16,3,'C.  String val;<br>',0);
INSERT INTO ANSWER VALUES (8,16,4,'D.  void setVal(String val);<br>',1);
INSERT INTO ANSWER VALUES (8,16,5,'E.  public static void setVal(String val);<br>',0);
INSERT INTO ANSWER VALUES (8,17,1,'A.  何も表示されない',0);
INSERT INTO ANSWER VALUES (8,17,2,'B.  「null」と表示される',1);
INSERT INTO ANSWER VALUES (8,17,3,'C.  「Brooklyn」と表示される',0);
INSERT INTO ANSWER VALUES (8,17,4,'D.  コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,17,5,'E.  実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,18,1,'A.　import xxx.*;<br>
　　package xxx.hoge;<br>
　　public class Main {<br>
　　　　// any code<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,18,2,'B.　package xxx.hoge;<br>
　　import xxx.*;<br>
　　public class Main {<br>
　　　　// any code<br>
　　}<br>',1);
INSERT INTO ANSWER VALUES (8,18,3,'C.　import xxx;<br>
　　package xxx.hoge;<br>
　　public class Main {<br>
　　　　// any code<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,18,4,'D.　package xxx.hoge;<br>
　　import xxx;<br>
　　public class Main  {<br>
　　　　// any code<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,18,5,'E.　package xxx.*;<br>
　　public class Main {<br>
　　　　// any code<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,19,1,'A.「null」と表示される',0);
INSERT INTO ANSWER VALUES (8,19,2,'B.「0」と表示される',0);
INSERT INTO ANSWER VALUES (8,19,3,'C.「other」と表示される',1);
INSERT INTO ANSWER VALUES (8,19,4,'D.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,19,5,'E.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,20,1,'A.「0 1」と表示される',0);
INSERT INTO ANSWER VALUES (8,20,2,'B.「1 2」と表示される',1);
INSERT INTO ANSWER VALUES (8,20,3,'C.　9行目でコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,20,4,'D.　15行目でコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,20,5,'E.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,21,1,'A.　サブクラスのpublicメソッド',0);
INSERT INTO ANSWER VALUES (8,21,2,'B.　同じクラスのprivateメソッド',1);
INSERT INTO ANSWER VALUES (8,21,3,'C.　super()を使用するサブクラスのコンストラクタ',0);
INSERT INTO ANSWER VALUES (8,21,4,'D.　オーバーロードされたメソッド',1);
INSERT INTO ANSWER VALUES (8,21,5,'E.　同じクラスのメソッド内に定義した自インスタンスを参照するthis変数',1);
INSERT INTO ANSWER VALUES (8,22,1,'A.　for(int i = 1; i < array.length; i++) {<br>
　　　　System.out.println(array[i]);<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,22,2,'B.　while (int i = 0; i < array.length) {<br>
　　　　System.out.println(array[i]);<br>
　　　　i++;<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,22,3,'C.　for(int i = 0; i < array.length; i++) {<br>
　　　　System.out.println(array[i]);<br>
　　}<br>',1);
INSERT INTO ANSWER VALUES (8,22,4,'D.　while(int i = 1; i < array.length) {<br>
　　　　System.out.println(array[i]);<br>
　　　　++i;<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,23,1,'A.　インタフェースの継承',0);
INSERT INTO ANSWER VALUES (8,23,2,'B.　インタフェースの実装',1);
INSERT INTO ANSWER VALUES (8,23,3,'C.　メソッドのオーバーロード',0);
INSERT INTO ANSWER VALUES (8,23,4,'D.　メソッドのオーバーライド',1);
INSERT INTO ANSWER VALUES (8,23,5,'E.　アクセス修飾子protectedの利用',0);
INSERT INTO ANSWER VALUES (8,24,1,'A.「Test」と表示される',0);
INSERT INTO ANSWER VALUES (8,24,2,'B.「Run」と表示される',1);
INSERT INTO ANSWER VALUES (8,24,3,'C.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,24,4,'E.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,25,1,'A.「a」と表示される',0);
INSERT INTO ANSWER VALUES (8,25,2,'B.「b」と表示される',1);
INSERT INTO ANSWER VALUES (8,25,3,'C.「ab」と表示される',0);
INSERT INTO ANSWER VALUES (8,25,4,'D.　何も表示されない',0);
INSERT INTO ANSWER VALUES (8,25,5,'E.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,25,6,'F.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,26,1,'A.  final',0);
INSERT INTO ANSWER VALUES (8,26,2,'B.  abstract',0);
INSERT INTO ANSWER VALUES (8,26,3,'C.  public',0);
INSERT INTO ANSWER VALUES (8,26,4,'D.  private',1);
INSERT INTO ANSWER VALUES (8,27,1,'A.「DAL027」「DAL305」と表示される',0);
INSERT INTO ANSWER VALUES (8,27,2,'B.「DAL027」「DAL027」と表示される',0);
INSERT INTO ANSWER VALUES (8,27,3,'C.「DAL305」「DAL305」と表示される',1);
INSERT INTO ANSWER VALUES (8,27,4,'D.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,27,5,'E.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,28,1,'A.「book」と表示される',0);
INSERT INTO ANSWER VALUES (8,28,2,'B.「bookary」と表示される',0);
INSERT INTO ANSWER VALUES (8,28,3,'C.「librar」と表示される',0);
INSERT INTO ANSWER VALUES (8,28,4,'D.「library」と表示される',1);
INSERT INTO ANSWER VALUES (8,28,5,'E.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,28,6,'F.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,29,1,'A.　ポリモーフィズム',1);
INSERT INTO ANSWER VALUES (8,29,2,'B.　カプセル化',0);
INSERT INTO ANSWER VALUES (8,29,3,'C.　アクセサメソッド',0);
INSERT INTO ANSWER VALUES (8,29,4,'D.　パッケージ',1);
INSERT INTO ANSWER VALUES (8,29,5,'E.　インタフェース',1);
INSERT INTO ANSWER VALUES (8,29,6,'F.　インスタンス化',0);
INSERT INTO ANSWER VALUES (8,30,1,'A.「3 2 1」と表示される',0);
INSERT INTO ANSWER VALUES (8,30,2,'B.「2 1 0」と表示される',0);
INSERT INTO ANSWER VALUES (8,30,3,'C.「2 1」と表示される',0);
INSERT INTO ANSWER VALUES (8,30,4,'D.　3行目でコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,30,5,'E.　5～7行目のdo-whileブロックでコンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (8,31,1,'A.　public class $Item {     }',1);
INSERT INTO ANSWER VALUES (8,31,2,'B.　public class Book% {     }',0);
INSERT INTO ANSWER VALUES (8,31,3,'C.　public class Employee# {     }',0);
INSERT INTO ANSWER VALUES (8,31,4,'D.　class shape5 {     }',1);
INSERT INTO ANSWER VALUES (8,31,5,'E.　class Sample-Test {     }',0);
INSERT INTO ANSWER VALUES (8,31,6,'F.　class Book_Shop {     }',1);
INSERT INTO ANSWER VALUES (8,32,1,'A.「hoge」が1回表示される',0);
INSERT INTO ANSWER VALUES (8,32,2,'B.「hoge」が3回表示される',1);
INSERT INTO ANSWER VALUES (8,32,3,'C.「hoge」が4回表示される',0);
INSERT INTO ANSWER VALUES (8,32,4,'D.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,32,5,'E.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,33,1,'A.　プラットフォームに依存する',0);
INSERT INTO ANSWER VALUES (8,33,2,'B.　単一スレッドのアプリケーションのみをサポートする',0);
INSERT INTO ANSWER VALUES (8,33,3,'C.　自動メモリ管理をサポートする',1);
INSERT INTO ANSWER VALUES (8,33,4,'D.　アーキテクチャに依存しない',1);
INSERT INTO ANSWER VALUES (8,33,5,'E.　プログラマーは、メモリを直接操作できる',0);
INSERT INTO ANSWER VALUES (8,33,6,'F.　実行時にコンパイルされる',1);
INSERT INTO ANSWER VALUES (8,34,1,'A.　class Triangle {<br>
　　　　public void setup(int height, int base) {     }<br>
　　　　public void setup(int height) {     }<br>
　　}<br>',1);
INSERT INTO ANSWER VALUES (8,34,2,'B.　class Triangle {<br>
　　　　public setup(int height, int base) {     }<br>
　　　　public void setup(int height) {     }<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,34,3,'C.　class Triangle {<br>
　　　　public int setup(int height, int base) {     }<br>
　　　　public void setup(int height, int base) {     }<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,34,4,'D.　class Triangle {<br>
　　　　public void setup(int height, int base) {     }<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,35,1,'A.　何も表示されない',0);
INSERT INTO ANSWER VALUES (8,35,2,'B.「0:」と表示される',0);
INSERT INTO ANSWER VALUES (8,35,3,'C.「0:null」と表示される',0);
INSERT INTO ANSWER VALUES (8,35,4,'D.　コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (8,35,5,'E.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,36,1,'A.　何らかのクラスを継承したクラスは継承できない',0);
INSERT INTO ANSWER VALUES (8,36,2,'B.　1つのクラスが複数のスーパークラスを継承できる',0);
INSERT INTO ANSWER VALUES (8,36,3,'C.　1つのスーパークラスから複数のサブクラスを定義できる',1);
INSERT INTO ANSWER VALUES (8,36,4,'D.　サブクラスはスーパークラスのすべてのメソッドとフィールドを引き継ぐわけではない',1);
INSERT INTO ANSWER VALUES (8,37,1,'A.　何も表示されない',0);
INSERT INTO ANSWER VALUES (8,37,2,'B.「A」と表示される',0);
INSERT INTO ANSWER VALUES (8,37,3,'C.「BC」と表示される',1);
INSERT INTO ANSWER VALUES (8,37,4,'D.「BCD」と表示される',0);
INSERT INTO ANSWER VALUES (8,37,5,'E.「D」と表示される',0);
INSERT INTO ANSWER VALUES (8,38,1,'A.「Employee」が表示される',0);
INSERT INTO ANSWER VALUES (8,38,2,'B.「Manager」が表示される',1);
INSERT INTO ANSWER VALUES (8,38,3,'C.「Employee」「Manager」の順に表示される',0);
INSERT INTO ANSWER VALUES (8,38,4,'D.「Manager」「Employee」の順に表示される',0);
INSERT INTO ANSWER VALUES (8,38,5,'E.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,38,6,'F.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,39,1,'A.　フィールド、コンストラクタ、メソッド',0);
INSERT INTO ANSWER VALUES (8,39,2,'B.　フィールド、メソッド',1);
INSERT INTO ANSWER VALUES (8,39,3,'C.　コンストラクタ、メソッド',0);
INSERT INTO ANSWER VALUES (8,39,4,'D.　メソッドのみ',0);
INSERT INTO ANSWER VALUES (8,40,1,'A.　0が表示される',0);
INSERT INTO ANSWER VALUES (8,40,2,'B.　1が表示される',0);
INSERT INTO ANSWER VALUES (8,40,3,'C.　2が表示される',1);
INSERT INTO ANSWER VALUES (8,40,4,'D.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,40,5,'E.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,41,1,'A.　Item item = null;',0);
INSERT INTO ANSWER VALUES (8,41,2,'B.　Item item;',0);
INSERT INTO ANSWER VALUES (8,41,3,'C.　Item item = new Book();',0);
INSERT INTO ANSWER VALUES (8,41,4,'D.　Item item = new Item();',1);
INSERT INTO ANSWER VALUES (8,41,5,'E.　new Item();',1);
INSERT INTO ANSWER VALUES (8,42,1,'A.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,42,2,'B.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,42,3,'C.　10が表示される',1);
INSERT INTO ANSWER VALUES (8,42,4,'D.　20が表示される',0);
INSERT INTO ANSWER VALUES (8,43,1,'A.「A」と表示される',0);
INSERT INTO ANSWER VALUES (8,43,2,'B.「B」と表示される',1);
INSERT INTO ANSWER VALUES (8,43,3,'C.「C」と表示される',0);
INSERT INTO ANSWER VALUES (8,43,4,'D.「B」「C」と表示される',0);
INSERT INTO ANSWER VALUES (8,43,5,'E.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,44,1,'A.「A」と表示される',0);
INSERT INTO ANSWER VALUES (8,44,2,'B.「B」と表示される',0);
INSERT INTO ANSWER VALUES (8,44,3,'C.「C」と表示される',0);
INSERT INTO ANSWER VALUES (8,44,4,'D.「D」と表示される',0);
INSERT INTO ANSWER VALUES (8,44,5,'E.　コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (8,44,6,'F.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,45,1,'A.　コンパイルは成功する',0);
INSERT INTO ANSWER VALUES (8,45,2,'B.　複数行でコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,45,3,'C.　3行目でコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,45,4,'D.　4行目でコンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (8,45,5,'E.　5行目でコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,45,6,'F.　6行目でコンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,46,1,'A.　for(str : array)',0);
INSERT INTO ANSWER VALUES (8,46,2,'B.　for(array : str)',0);
INSERT INTO ANSWER VALUES (8,46,3,'C.　for(String str : array)',1);
INSERT INTO ANSWER VALUES (8,46,4,'D.　for(String str : String[] array)',0);
INSERT INTO ANSWER VALUES (8,46,5,'E.　for(String[] array : str)',0);
INSERT INTO ANSWER VALUES (8,47,1,'A.「payment = 40」と表示される',0);
INSERT INTO ANSWER VALUES (8,47,2,'B.「payment = 43」と表示される',0);
INSERT INTO ANSWER VALUES (8,47,3,'C.「payment = 43.2」と表示される',0);
INSERT INTO ANSWER VALUES (8,47,4,'D.　コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (8,48,1,'A.「super」と表示される',0);
INSERT INTO ANSWER VALUES (8,48,2,'B.「sub」と表示される',1);
INSERT INTO ANSWER VALUES (8,48,3,'C.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,48,4,'D.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,49,1,'A.　抽象クラスに定義されるメソッドは、暗黙的にpublic abstractである',0);
INSERT INTO ANSWER VALUES (8,49,2,'B.　抽象クラスに定義されるフィールドは、暗黙的にstatic finalである',0);
INSERT INTO ANSWER VALUES (8,49,3,'C.　抽象クラスを継承するサブクラスを定義することはできない',0);
INSERT INTO ANSWER VALUES (8,49,4,'D.　抽象クラスはインスタンス化できない',1);
INSERT INTO ANSWER VALUES (8,49,5,'E.　抽象クラスは抽象メソッドを持たなければいけない',0);
INSERT INTO ANSWER VALUES (8,50,1,'A.「super」と表示される',0);
INSERT INTO ANSWER VALUES (8,50,2,'B.「sub」と表示される',0);
INSERT INTO ANSWER VALUES (8,50,3,'C.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,50,4,'D.　実行時に例外がスローされる',1);
INSERT INTO ANSWER VALUES (8,51,1,'A.　super(val)',0);
INSERT INTO ANSWER VALUES (8,51,2,'B.　this.val',0);
INSERT INTO ANSWER VALUES (8,51,3,'C.　super.val',1);
INSERT INTO ANSWER VALUES (8,51,4,'D.　this(val)',0);
INSERT INTO ANSWER VALUES (8,51,5,'E.　super().val',0);
INSERT INTO ANSWER VALUES (8,51,6,'F.　SuperClass.val',0);
INSERT INTO ANSWER VALUES (8,52,1,'A.　int array = new int[3];',0);
INSERT INTO ANSWER VALUES (8,52,2,'B.　int[] array = new int(3);',0);
INSERT INTO ANSWER VALUES (8,52,3,'C.　int[] array;<br>
　　array = new int[3];<br>',1);
INSERT INTO ANSWER VALUES (8,52,4,'D.　int array[3];',0);
INSERT INTO ANSWER VALUES (8,52,5,'E.　int[] array = {3, 6, 2};',1);
INSERT INTO ANSWER VALUES (8,52,6,'F.　int[] array = new int()[3];',0);
INSERT INTO ANSWER VALUES (8,52,7,'G.　int[] array = new int[3];',1);
INSERT INTO ANSWER VALUES (8,53,1,'A.　何も表示されない',0);
INSERT INTO ANSWER VALUES (8,53,2,'B.「hoge」が4回表示される',1);
INSERT INTO ANSWER VALUES (8,53,3,'C.「hoge」が5回表示される',0);
INSERT INTO ANSWER VALUES (8,53,4,'D.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,53,5,'E.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,54,1,'A.「7:5」と表示される',0);
INSERT INTO ANSWER VALUES (8,54,2,'B.「2:5」と表示される',0);
INSERT INTO ANSWER VALUES (8,54,3,'C.「7:2」と表示される',0);
INSERT INTO ANSWER VALUES (8,54,4,'D.「4:5」と表示される',0);
INSERT INTO ANSWER VALUES (8,54,5,'E.「4:2」と表示される',1);
INSERT INTO ANSWER VALUES (8,54,6,'F.　コンパイルエラーが発生する',0);
INSERT INTO ANSWER VALUES (8,55,1,'A.　static',1);
INSERT INTO ANSWER VALUES (8,55,2,'B.　final',0);
INSERT INTO ANSWER VALUES (8,55,3,'C.　public',0);
INSERT INTO ANSWER VALUES (8,55,4,'D.　void',0);
INSERT INTO ANSWER VALUES (8,56,1,'A.「0 5」と表示される',0);
INSERT INTO ANSWER VALUES (8,56,2,'B.「1 5」と表示される',0);
INSERT INTO ANSWER VALUES (8,56,3,'C.「0 4」と表示される',0);
INSERT INTO ANSWER VALUES (8,56,4,'D.　コンパイルエラーが発生する',1);
INSERT INTO ANSWER VALUES (8,56,5,'E.　実行時に例外がスローされる',0);
INSERT INTO ANSWER VALUES (8,57,1,'A.　public interface App {<br>
　　　　public String id = "A001";<br>
　　　　void execute(String param);<br>
　　}<br>',1);
INSERT INTO ANSWER VALUES (8,57,2,'B.　public interface App {<br>
　　　　private String id = "A001";<br>
　　　　public void execute(String param);<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,57,3,'C.　public interface App {<br>
　　　　public String id;<br>
　　　　abstract void execute(String param);<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,57,4,'D.　public interface App {<br>
　　　　abstract String id = "A001";<br>
　　　　void execute(String param);<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,58,1,'A.　サブクラスはスーパークラスのコンストラクタを引き継がない',1);
INSERT INTO ANSWER VALUES (8,58,2,'B.　コンストラクタの戻り値型はvoidにすることができる',0);
INSERT INTO ANSWER VALUES (8,58,3,'C.　コンストラクタはprivateで修飾できる',1);
INSERT INTO ANSWER VALUES (8,58,4,'D.　コンストラクタは、クラス内のすべてのフィールドを初期化しなければならない',0);
INSERT INTO ANSWER VALUES (8,59,1,'A.　void test() {<br>
　　　　System.out.println("impl");<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,59,2,'B.　public abstract void test() {<br>
　　　　System.out.println("impl");<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,59,3,'C.　public void test() {<br>
　　　　System.out.println("impl");<br>
　　}<br>',1);
INSERT INTO ANSWER VALUES (8,59,4,'D.　public void print() {<br>
　　　　System.out.println("impl");<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,59,5,'E.　void print() {<br>
　　　　System.out.println("impl");<br>
　　}<br>',0);
INSERT INTO ANSWER VALUES (8,60,1,'A.「s1 == s2 s1 == s3」と表示される',0);
INSERT INTO ANSWER VALUES (8,60,2,'B.「s1 != s2 s1 == s3」と表示される',0);
INSERT INTO ANSWER VALUES (8,60,3,'C.「s1 == s2 s1 != s3」と表示される',1);
INSERT INTO ANSWER VALUES (8,60,4,'D.「s1 != s2 s1 != s3」と表示される',0);
INSERT INTO QUIZ VALUES (6,13,'次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。(1つ選択)<br>
<br>
1.　public class Main {<br>
2.　　　public static void main(String[] args) {<br>
3.　　　　　Station s = new Station();<br>
4.　　　　　s.setName("Santa Clara");<br>
5.　　　　　s.printName();<br>
6.　　　}<br>
7.　}<br>
8.<br>
9.　class Station {<br>
10.　　private String name;<br>
11.<br>
12.　　public Station(String name) {<br>
13.　　　　this.name = name;<br>
14.　　}<br>
15.　　public void setName(String name) {<br>
16.　　　　this.name = name;<br>
17.　　}<br>
18.　　public void printName() {<br>
19.　　　　System.out.println(name);<br>
20.　　}<br>
21. }<br>',4,1);
